{"version":3,"sources":["webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dev-settings.provider.ts","webpack:///./src/environments/environment.ts","webpack:///./src/tosic/sxc/dnn-app-component.ts","webpack:///./src/tosic/sxc/http-interceptor.service.provider.ts","webpack:///./src/tosic/sxc/http-interceptor.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/tosic/sxc/SxcAngular.ts","webpack:///./src/tosic/sxc/dnn-dev-settings.ts","webpack:///./src/tosic/sxc/sxc-content.service.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 128;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 128\n// module chunks = 1","import { enableProdMode, Provider, APP_INITIALIZER, ApplicationRef } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component, Inject, ApplicationRef, ElementRef, Injector } from '@angular/core';\nimport { sxcInstance } from \"tosic/sxc/sxcInstance\";\nimport { SxcAngular } from \"tosic/sxc/SxcAngular\";\nimport { DnnAppComponent } from \"tosic/sxc/dnn-app-component\";\nimport { ContentResourceFactory } from \"tosic/sxc/sxc-content.service\";\n\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <h1>{{title}}</h1>\n    <p>moduleId (async pipe): {{sxcNg.moduleId | async}}</p>\n    <p>moduleId (subscription): {{modId}}</p>\n  `,\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent extends DnnAppComponent {\n  modId: number;\n\n  constructor(private element:ElementRef, public sxcNg: SxcAngular, private crf: ContentResourceFactory) {\n    super(element, sxcNg);\n\n    let person = crf.resource(\"Person\");\n\n    let personObservable = person.get();\n\n    personObservable.subscribe(res => {\n      console.log('got person', res);\n\n    })\n\n\n    sxcNg.moduleId\n      .subscribe((id: number) => this.modId = id);\n  }\n\n  ngOnInit(){\n    // let's try stuff...\n  }\n  title = 'Hello Angular 4 Data on DNN! Let\\'s load now!';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport { SxcAngular } from \"tosic/sxc/SxcAngular\";\nimport { DevSettingsProvider } from \"app/dev-settings.provider\";\nimport { ContentResourceFactory } from \"tosic/sxc/sxc-content.service\";\nimport { Http2SxcHttpProvider } from \"tosic/sxc/http-interceptor.service.provider\";\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [DevSettingsProvider, SxcAngular, ContentResourceFactory, Http2SxcHttpProvider],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","\r\nimport { Provider } from \"@angular/core\";\r\nimport { DnnDevSettings } from \"tosic/sxc/dnn-dev-settings\";\r\n\r\nexport let DevSettingsProvider : Provider = {\r\n    provide: DnnDevSettings,\r\n    useValue: <DnnDevSettings> {\r\n        ignoreMissing$2sxc: true,\r\n        ignoreMissingServicesFramework: true,\r\n        forceUse: false,\r\n        moduleId: 17,\r\n        tabId: 36,\r\n        path: \"/\"\r\n    },\r\n}\r\n\r\ninterface test {\r\n    tabId: number;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/dev-settings.provider.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","//\n// This is a base class for all apps which run in DNN.\n// It ensures that the rest of the parts depending on DNN parameters are correctly initialized\n// \nimport { ElementRef } from '@angular/core';\nimport { SxcAngular } from \"tosic/sxc/SxcAngular\";\n\n\nexport class DnnAppComponent {\n  constructor(element:ElementRef, sxcNg: SxcAngular) {\n    sxcNg.autoConfigure(element);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tosic/sxc/dnn-app-component.ts","import { HttpInDnn } from './http-interceptor.service';\r\nimport { Http, XHRBackend, RequestOptions } from \"@angular/http\";\r\nimport { SxcAngular } from \"tosic/sxc/SxcAngular\";\r\n\r\nexport function Http2SxcProviderFactory(backend: XHRBackend, defaultOptions: RequestOptions, sxc: SxcAngular) {\r\n    return new HttpInDnn(backend, defaultOptions, sxc);\r\n}\r\n\r\nexport let Http2SxcHttpProvider =\r\n    {\r\n        provide: Http,\r\n        useFactory: Http2SxcProviderFactory,\r\n        deps: [XHRBackend, RequestOptions, SxcAngular]\r\n    };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/tosic/sxc/http-interceptor.service.provider.ts","import { Injectable } from '@angular/core';\r\nimport {   Http,   ConnectionBackend,   RequestOptions,  RequestOptionsArgs,  Request,  Response,  Headers } from '@angular/http';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { SxcAngular } from \"tosic/sxc/SxcAngular\";\r\nimport { ReplaySubject } from \"rxjs/ReplaySubject\";\r\nimport { sxcInstanceInterface } from \"tosic/sxc/sxcInstanceInterface\";\r\nimport { Subject } from \"rxjs/Subject\";\r\nimport { contextParameters } from \"tosic/sxc/context-parameters\";\r\n\r\n@Injectable()\r\nexport class HttpInDnn extends Http {\r\n  constructor(\r\n    backend: ConnectionBackend,\r\n    defaultOptions: RequestOptions,\r\n    private sxcNg: SxcAngular\r\n  ) {\r\n    super(backend, defaultOptions);\r\n  }\r\n\r\n  request(url: string | Request, options: RequestOptionsArgs = new RequestOptions()): Observable<Response> {\r\n    let subject = new Subject<Response>();\r\n    this.sxcNg.context.take(1).subscribe(res => {\r\n        // todo: better dev mode detection using environment\r\n        let isDevMode = window.location.hostname === 'localhost';\r\n\r\n        if (typeof url === 'string') {\r\n          url = res.sxc.resolveServiceUrl(<string>url);\r\n          this.configure(options, res);\r\n        }\r\n        else {\r\n          url.url = res.sxc.resolveServiceUrl(<string>url.url);\r\n          this.configure(<Request>url, res);\r\n        }\r\n\r\n        console.log(\"options\", options);\r\n        console.log('url', url);\r\n\r\n        super.request(url)//, options)\r\n          .subscribe(subject.next);\r\n      })\r\n      ;//.catch(e => console.error(e))\r\n    return subject.asObservable();\r\n  }\r\n\r\n  private configure(options: RequestOptionsArgs | Request, params: contextParameters): RequestOptionsArgs {\r\n    if (!options.headers) options.headers = new Headers();\r\n    options.headers.append('ModuleId', params.modulId.toString());\r\n    options.headers.append('TabId', params.tabId.toString());\r\n    options.headers.append('ContentBlockId', params.contentBlockId.toString());\r\n    options.headers.append('RequestVerificationToken', params.servicesFramework.getAntiForgeryValue());\r\n    options.headers.append('X-Debugging-Hint', 'bootstrapped by 2sxc4ng');\r\n    return options;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/tosic/sxc/http-interceptor.service.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"h1 {\\r\\n  color: #369;\\r\\n  font-family: Arial, Helvetica, sans-serif;\\r\\n  font-size: 250%;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 195\n// module chunks = 1","\r\nimport { sxcInstanceInterface } from \"tosic/sxc/sxcInstanceInterface\";\r\nimport { ElementRef, Optional, Injectable } from \"@angular/core\";\r\nimport { ReplaySubject, Observable, Subscription } from \"rxjs\";\r\nimport { sxcInstance } from \"tosic/sxc/sxcInstance\";\r\nimport { DnnDevSettings } from \"tosic/sxc/dnn-dev-settings\";\r\nimport { contextParameters } from \"tosic/sxc/context-parameters\";\r\n\r\ndeclare const window: any;\r\n\r\n@Injectable()\r\nexport class SxcAngular {\r\n    context: Observable<contextParameters>;\r\n    ready: boolean = false;\r\n    moduleId: Observable<number>;\r\n    tabId: Observable<number>;\r\n    contentBlockId: Observable<number>;\r\n    servicesFramework: Observable<any>;\r\n    sxc: Observable<sxcInstanceInterface>;\r\n\r\n    // often important dnn properties\r\n    private globSxc: any;\r\n    private midSubject: ReplaySubject<number> = new ReplaySubject<number>();\r\n    private tidSubject: ReplaySubject<number> = new ReplaySubject<number>();\r\n    private contentBlockIdSubject: ReplaySubject<number> = new ReplaySubject<number>();\r\n    private sfSubject: ReplaySubject<any> = new ReplaySubject<any>();\r\n    private contextSubject: ReplaySubject<contextParameters> = new ReplaySubject<contextParameters>();\r\n\r\n    private sxcSubject: ReplaySubject<sxcInstanceInterface> = new ReplaySubject<sxcInstanceInterface>();\r\n    private sxcInstance: sxcInstanceInterface;\r\n\r\n    constructor(@Optional() private devSettings: DnnDevSettings) {\r\n        // make sure we have a devSettings, which at least has the minimal ignore-settings\r\n        devSettings = Object.assign({}, {\r\n            ignoreMissing$2sxc: false,\r\n            ignoreMissingServicesFramework: false\r\n        }, devSettings);\r\n\r\n        this.globSxc = <any>window.$2sxc;\r\n        if (this.globSxc == undefined && !devSettings.ignoreMissing$2sxc)\r\n            console.log('window.$2sxc is null - you probably forgot to include the script before loading angular');\r\n\r\n        this.moduleId = this.midSubject.asObservable();\r\n        this.tabId = this.tidSubject.asObservable();\r\n        this.contentBlockId = this.contentBlockIdSubject.asObservable();\r\n        this.servicesFramework = this.sfSubject.asObservable();\r\n        this.sxc = this.sxcSubject.asObservable();\r\n        this.context = this.contextSubject.asObservable();\r\n\r\n        Observable.combineLatest(this.moduleId, this.tabId, this.contentBlockId, this.servicesFramework, this.sxc)\r\n            .subscribe(res => {\r\n                console.log('testing');\r\n                this.contextSubject.next(<contextParameters>{\r\n                    modulId: res[0],\r\n                    tabId: res[1],\r\n                    contentBlockId: res[2],\r\n                    servicesFramework: res[3],\r\n                    sxc: res[4]\r\n                })\r\n            });\r\n\r\n        this.context.subscribe(x => console.log('inside', x));\r\n    };\r\n\r\n    autoConfigure(htmlNode: ElementRef) {\r\n        if (this.globSxc == undefined) {\r\n            if (!this.devSettings.ignoreMissing$2sxc)\r\n                throw \"cannot autoConfigure - missing $2sxc\";\r\n            this.midSubject.next(this.devSettings.moduleId);\r\n            this.tidSubject.next(this.devSettings.tabId);\r\n            this.contentBlockIdSubject.next(0);\r\n        }\r\n        else {\r\n            let sxc = <sxcInstanceInterface>this.globSxc(htmlNode.nativeElement);\r\n            console.log('sxc in bootstrap', sxc);\r\n            if (sxc == undefined || sxc == null)\r\n                throw \"couldn't get sxc instance - reason unknown\";\r\n\r\n            // update/publish moduleId\r\n            this.midSubject.next(sxc.id);\r\n            this.contentBlockIdSubject.next(sxc.cbid);\r\n            this.sxcSubject.next(sxc);\r\n            this.sxcInstance = sxc;\r\n\r\n\r\n            // check if DNN Services framework exists...\r\n            if(window.$ && window.$.ServicesFramework) {\r\n                // run timer till sf is ready, but max for a second\r\n                var timer = Observable.timer(0, 100)    // try every 100ms\r\n                    .take(10)                           // max 10x\r\n                    .subscribe(x => {\r\n                        // this must be access AFTER a delay, as the SF is not be ready yet...\r\n                        let sf =  window.$.ServicesFramework(this.sxcInstance.id);\r\n                        if(sf.getAntiForgeryValue()){ // if this works, the SF is initialized\r\n                            if(timer) timer.unsubscribe();\r\n                            if(window.dnn && window.dnn.vars && window.dnn.vars.length == 0)\r\n                                window.dnn.vars = null; // must reset, as they are usually incorrect at this time\r\n                            this.sfSubject.next(sf);\r\n                            this.tidSubject.next(sf.getTabId());\r\n                        }\r\n                        this.ready = true;\r\n                    });\r\n            } else {\r\n                if(!this.devSettings.ignoreMissingServicesFramework)\r\n                    throw \"DNN Services Framework is missing, and it's not allowed according to devSettings. Either set devSettings to ignore this, or ensure it's there\";\r\n                \r\n                this.tidSubject.next(this.devSettings.tabId);\r\n                this.sfSubject.next(null);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    getInstance(seed: any, cbid?: number): sxcInstanceInterface {\r\n        return <sxcInstanceInterface>this.globSxc(seed, cbid);\r\n    }\r\n\r\n    urlParams(name: string): string {\r\n        return <string>this.globSxc.urlParams(name);\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/tosic/sxc/SxcAngular.ts","// This lets you configure test-values during development\r\n\r\nexport class DnnDevSettings {\r\n    ignoreMissing$2sxc = false;\r\n    ignoreMissingServicesFramework  = false;\r\n    forceUse: boolean = false;\r\n    moduleId: number = 0;\r\n    tabId: number = 0;\r\n    path: string = \"/\";\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/tosic/sxc/dnn-dev-settings.ts","\r\n\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Http, Response, Headers } from \"@angular/http\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n\r\n\r\n@Injectable()\r\nexport class ContentResourceFactory {\r\n  constructor(private http: Http) {\r\n\r\n  }\r\n\r\n  resource(typeName: string) {\r\n    return new ContentResource(this.http, typeName);\r\n  }\r\n}\r\n\r\n\r\n@Injectable()\r\nexport class ContentResource {\r\n\r\n  constructor(private http: Http, private typeName: string) {\r\n\r\n  }\r\n\r\n  get(id:number = null): Observable<Response> {\r\n      var url = \"app/auto/content/\" + this.typeName;\r\n      if(id)\r\n        url += \"/\" + id.toString();\r\n        let head = new Headers();\r\n        head.append(\"hello\", \"there\");\r\n      return this.http.get(url, { headers: head });\r\n\r\n    // this.http.get(`${this.base + this.path}/DirectoryItem`, { headers: this.headers })\r\n    //   .map(res => res.json().map((entry: DirectoryEntry) => {\r\n    //     entry.Logo = this.base + entry.Logo;\r\n    //     return entry;\r\n    //   }))\r\n    //   .subscribe(entries => this.entrySubject.next(entries));\r\n  }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/tosic/sxc/sxc-content.service.ts"],"sourceRoot":""}