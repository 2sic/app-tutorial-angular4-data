{"version":3,"sources":["webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/tosic/sxc/sxcInstance.ts","webpack:///./src/app/app.component.css","webpack:///./src/dnn/dnn.service.ts","webpack:///./src/tosic/sxc/$2sxc.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 126;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 126\n// module chunks = 1","import { enableProdMode, Provider, APP_INITIALIZER, ApplicationRef } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n// import { platformBrowserDnn } from './bootstrap/dnn.bootstrap';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport { APP_BASE_HREF } from \"@angular/common\";\n\nif (environment.production) {\n  enableProdMode();\n}\n\nexport function getUser(): Promise<any> {\n    console.log('get user called');\n    var promise = new Promise<any>( (resolve, reject) =>  resolve(0));\n    \n    return promise;\n}\n\n\n// platformBrowserDnn().bootstrapModule(AppModule);\nlet dnnProviders : Provider[] = [\n  {\n    provide: \"mid\",\n    useValue: 17\n  }, {\n    provide: APP_INITIALIZER,\n      useFactory: (/* appRef: ApplicationRef /*userServ: UserService*/) => () => getUser(),\n      deps: [/* ApplicationRef/*UserService, Http*/],\n      multi: true\n    }\n]\n\n\n\n// declare const window: any;\n// window.dnnNg = { \n//   buildProviders: function(base: string, mid: number) : Provider[] {\n//     var dnnProviders : Provider[] = [\n//       { provide: \"mid\", useValue: mid },\n//       { provide: APP_BASE_HREF, useValue: base }  // override the base path...\n//     ]\n//     return dnnProviders;\n//   },\n//   platform: platformBrowserDynamic,\n//   // bootstrapper: platformBrowserDynamic(dnnProviders).bootstrapModule,\n//   modules: [AppModule]\n// };\n\nplatformBrowserDynamic(dnnProviders).bootstrapModule(AppModule);\n\nexport function Run(){ \n  console.log(\"running...\");\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component, Inject, ApplicationRef, ElementRef, Injector } from '@angular/core';\nimport { $2sxc } from \"tosic/sxc/$2sxc\";\nimport { sxcInstance } from \"tosic/sxc/sxcInstance\";\nimport { DnnService } from \"dnn/dnn.service\";\n\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <h1>{{title}}</h1>\n    <p>moduleId (async pipe): {{moduleIdService.moduleId | async}}</p>\n    <p>moduleId (subscription): {{modId}}</p>\n  `,\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  modId: number;\n\n  constructor(private appRef: ApplicationRef, private el:ElementRef, private injector: Injector,\n    public $2sxc: $2sxc, /*, private sxcInstance: sxcInstance,*/ @Inject(\"mid\") private mid: number,\n    public moduleIdService: DnnService\n  ) {\n    console.log(el.nativeElement.getAttribute('foo'));\n    $2sxc.bootstrap(el);\n    console.log(\"mid\", mid);\n    // console.log(\"2sxc: \", $2sxc);\n    // console.log(\"sxcI: \", sxcInstance);\n    // console.log(\"get\", sxcInstance.get());\n    // console.log(\"mid\", mid);\n    moduleIdService.moduleId\n      .subscribe((id: number) => this.modId = id);\n  }\n\n  ngOnInit(){\n    console.log('init appref in components', this.appRef);\n\n        // let element2: ElementRef = this.appRef['_rootComponents'][0].location;\n      let element = this.injector.get(this.appRef.componentTypes[0]).elementRef;\n\n      console.log(\"el ref\", element);\n  }\n  title = 'Hello Angular 4 Data on DNN! Let\\'s load!';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, APP_INITIALIZER, ApplicationRef } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport { $2sxc } from \"tosic/sxc/$2sxc\";\nimport { sxcInstance } from \"tosic/sxc/sxcInstance\";\nimport { DnnService } from \"dnn/dnn.service\";\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [$2sxc, sxcInstance, DnnService\n  // ,  {\n  //   provide: APP_INITIALIZER,\n  //     useFactory: (appRef: ApplicationRef /*userServ: UserService*/) => () => initInNg(appRef),\n  //     deps: [ApplicationRef/*UserService, Http*/],\n  //     multi: true\n  //   }\n    ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  constructor(private applicationRef: ApplicationRef){\n    console.log('constructor appref', applicationRef);\n  }\n }\n\n\n// export function initInNg(appRef: ApplicationRef): Promise<any> {\n//     console.log('initInIng called');\n//     console.log('appref', appRef);\n//     var promise = new Promise<any>( (resolve, reject) =>  resolve(0));\n    \n//     return promise;\n// }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { Injectable, ApplicationRef, Injector, ElementRef } from '@angular/core';\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { $2sxc } from \"tosic/sxc/$2sxc\";\r\nimport { sxcInstanceInterface } from \"tosic/sxc/sxcInstanceInterface\";\r\nimport { DnnService } from \"dnn/dnn.service\";\r\n// import { sxcAppId } from \"tosic/sxc/sxcAppId.uri.provider\";\r\n\r\n\r\n\r\ndeclare const window: any;\r\n\r\n@Injectable()\r\nexport class sxcInstance implements sxcInstanceInterface {\r\n    resolveServiceUrl(path: string): string { throw \"not implemented\"; };\r\n    id: number;\r\n    cbid: number;\r\n    isEditMode(): boolean {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    private sxc: sxcInstanceInterface;\r\n  constructor(\r\n    private app: ApplicationRef, private injector: Injector,\r\n    private $2sxc: $2sxc,\r\n    private moduleIdService: DnnService\r\n  ) {\r\n    //   let element2: ElementRef = this.app['_rootComponents'][0].location;\r\n    //   let element = injector.get(app.componentTypes[0]).elementRef;\r\n\r\n    //   this.sxc = $2sxc.getInstance(element);\r\n    //   this.resolveServiceUrl = this.sxc.resolveServiceUrl;\r\n    //   this.id = this.sxc.id;\r\n    //   this.cbid = this.sxc.cbid;\r\n    //   this\r\n    //return $2sxc.getInstance(appId);\r\n    moduleIdService.moduleId\r\n      .subscribe((id: number) => {\r\n        console.log(`a new moduleId arrived: ${id}`);\r\n      })\r\n  }\r\n  get(): sxcInstanceInterface {\r\n      let element2: ElementRef = this.app['_rootComponents'][0].location;\r\n      let element = this.injector.get(this.app.componentTypes[0]).elementRef;\r\n      this.sxc = this.$2sxc.getInstance(element);\r\n      return this.sxc;\r\n\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/tosic/sxc/sxcInstance.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"h1 {\\r\\n  color: #369;\\r\\n  font-family: Arial, Helvetica, sans-serif;\\r\\n  font-size: 250%;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 191\n// module chunks = 1","import { Injectable, ApplicationRef } from '@angular/core';\nimport { ReplaySubject } from \"rxjs\";\nimport { Observable } from \"rxjs/Observable\";\n\n@Injectable()\nexport class DnnService {\n  private moduleIdSubject: ReplaySubject<number> = new ReplaySubject<number>();\n  private servicesFramework: ReplaySubject<any> = new ReplaySubject<any>();\n  moduleId: Observable<number>;\n\n  constructor(private appRef: ApplicationRef) {\n    this.moduleId = this.moduleIdSubject.asObservable();\n    this.moduleIdSubject.next(470);\n  }\n\n  ngOnInit() {\n    \n\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/dnn/dnn.service.ts","\r\nimport { sxcInstanceInterface } from \"tosic/sxc/sxcInstanceInterface\";\r\nimport { ElementRef } from \"@angular/core\";\r\n\r\ndeclare const window: any;\r\n\r\nfunction $2sxcProviderFactory() {\r\n    return <$2sxc> window.$2sxc;\r\n}\r\n\r\nexport class $2sxc /*Interface*/ {\r\n    private globSxc: any;\r\n\r\n    constructor() {\r\n        this.globSxc = $2sxcProviderFactory();\r\n    };\r\n\r\n    bootstrap(htmlNode:ElementRef) {\r\n        let sxc = window.$2sxc(htmlNode.nativeElement);\r\n        console.log('sxc in bootstrap', sxc);\r\n    }\r\n\r\n    getInstance(seed: any, cbid?: number) : sxcInstanceInterface {\r\n        return <sxcInstanceInterface> this.globSxc(seed, cbid);\r\n    }\r\n\r\n    urlParams(name: string): string {\r\n        return <string> this.globSxc.urlParams(name);\r\n    }\r\n    \r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/tosic/sxc/$2sxc.ts"],"sourceRoot":""}