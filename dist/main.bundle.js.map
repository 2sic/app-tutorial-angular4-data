{"version":3,"sources":["webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/tosic/sxc/$2sxc.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/tosic/sxc/sxcInstance.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"h1 {\\r\\n  color: #369;\\r\\n  font-family: Arial, Helvetica, sans-serif;\\r\\n  font-size: 250%;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 135\n// module chunks = 1","module.exports = \"<h1>\\n  {{title}}\\n</h1>\\n\\n<p>\\n  want to experiment with your own changes? look at the readme.md in this app-folder\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 137\n// module chunks = 1","\r\nimport { sxcInstanceInterface } from \"tosic/sxc/sxcInstanceInterface\";\r\n\r\ndeclare const window: any;\r\n\r\nfunction $2sxcProviderFactory() {\r\n    return <$2sxc> window.$2sxc;\r\n}\r\n\r\nexport class $2sxc /*Interface*/ {\r\n    private globSxc: any;\r\n\r\n    constructor() {\r\n        this.globSxc = $2sxcProviderFactory();\r\n    };\r\n\r\n    getInstance(seed: any, cbid?: number) : sxcInstanceInterface {\r\n        return <sxcInstanceInterface> this.globSxc(seed, cbid);\r\n    }\r\n\r\n    urlParams(name: string): string {\r\n        return <string> this.globSxc.urlParams(name);\r\n    }\r\n    \r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/tosic/sxc/$2sxc.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 70;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 70\n// module chunks = 1","import { enableProdMode, Provider } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n// import { platformBrowserDnn } from './bootstrap/dnn.bootstrap';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\n// platformBrowserDnn().bootstrapModule(AppModule);\nlet dnnProviders : Provider[] = [\n  {\n    provide: \"mid\",\n    useValue: 17\n  }\n]\n\ndeclare const window: any;\nwindow.dnnNg = { \n  bootstrapper: platformBrowserDynamic(dnnProviders).bootstrapModule,\n  modules: [AppModule]\n};\n\nplatformBrowserDynamic(dnnProviders).bootstrapModule(AppModule);\n\nexport function Run(){ \n  console.log(\"running...\");\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component, Inject } from '@angular/core';\nimport { $2sxc } from \"tosic/sxc/$2sxc\";\nimport { sxcInstance } from \"tosic/sxc/sxcInstance\";\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  constructor(/*public $2sxc: $2sxc, private sxcInstance: sxcInstance,*/ @Inject(\"mid\") private mid: number) {\n    console.log(\"mid\", mid);\n    // console.log(\"2sxc: \", $2sxc);\n    // console.log(\"sxcI: \", sxcInstance);\n    // console.log(\"get\", sxcInstance.get());\n    // console.log(\"mid\", mid);\n  }\n  title = 'Hello Angular 4 Data on DNN! Let\\' load!';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport { $2sxc } from \"tosic/sxc/$2sxc\";\nimport { sxcInstance } from \"tosic/sxc/sxcInstance\";\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [$2sxc, sxcInstance],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { Injectable, ApplicationRef, Injector, ElementRef } from '@angular/core';\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { $2sxc } from \"tosic/sxc/$2sxc\";\r\nimport { sxcInstanceInterface } from \"tosic/sxc/sxcInstanceInterface\";\r\n// import { sxcAppId } from \"tosic/sxc/sxcAppId.uri.provider\";\r\n\r\n\r\n\r\ndeclare const window: any;\r\n\r\n@Injectable()\r\nexport class sxcInstance implements sxcInstanceInterface {\r\n    resolveServiceUrl(path: string): string { throw \"not implemented\"; };\r\n    id: number;\r\n    cbid: number;\r\n    isEditMode(): boolean {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    private sxc: sxcInstanceInterface;\r\n  constructor(\r\n    private app: ApplicationRef, private injector: Injector,\r\n    private $2sxc: $2sxc,\r\n  ) {\r\n    //   let element2: ElementRef = this.app['_rootComponents'][0].location;\r\n    //   let element = injector.get(app.componentTypes[0]).elementRef;\r\n\r\n    //   this.sxc = $2sxc.getInstance(element);\r\n    //   this.resolveServiceUrl = this.sxc.resolveServiceUrl;\r\n    //   this.id = this.sxc.id;\r\n    //   this.cbid = this.sxc.cbid;\r\n    //   this\r\n    //return $2sxc.getInstance(appId);\r\n  }\r\n  get(): sxcInstanceInterface {\r\n\r\n      let element2: ElementRef = this.app['_rootComponents'][0].location;\r\n      let element = this.injector.get(this.app.componentTypes[0]).elementRef;\r\n      this.sxc = this.$2sxc.getInstance(element);\r\n      return this.sxc;\r\n\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/tosic/sxc/sxcInstance.ts"],"sourceRoot":""}