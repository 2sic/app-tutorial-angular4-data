{"version":3,"sources":["webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.css","webpack:///./src/tosic/sxc/$2sxc.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 125;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 125\n// module chunks = 1","import { enableProdMode, Provider, APP_INITIALIZER, ApplicationRef } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component, Inject, ApplicationRef, ElementRef, Injector } from '@angular/core';\nimport { sxcInstance } from \"tosic/sxc/sxcInstance\";\nimport { SxcNg } from \"tosic/sxc/$2sxc\";\n\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <h1>{{title}}</h1>\n    <p>moduleId (async pipe): {{sxcNg.moduleId | async}}</p>\n    <p>moduleId (subscription): {{modId}}</p>\n  `,\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  modId: number;\n\n  constructor(private appRef: ApplicationRef, private el:ElementRef, private injector: Injector,\n    public sxcNg: SxcNg, /*, private sxcInstance: sxcInstance,*/\n  ) {\n    sxcNg.autoConfigure(el);\n    sxcNg.moduleId\n      .subscribe((id: number) => this.modId = id);\n  }\n\n  ngOnInit(){\n    // let's try stuff...\n  }\n  title = 'Hello Angular 4 Data on DNN! Let\\'s load!';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, APP_INITIALIZER, ApplicationRef } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport { sxcInstance } from \"tosic/sxc/sxcInstance\";\nimport { DnnService } from \"dnn/dnn.service\";\nimport { SxcNg } from \"tosic/sxc/$2sxc\";\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [SxcNg /* sxcInstance, DnnService*/    ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"h1 {\\r\\n  color: #369;\\r\\n  font-family: Arial, Helvetica, sans-serif;\\r\\n  font-size: 250%;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 189\n// module chunks = 1","\r\nimport { sxcInstanceInterface } from \"tosic/sxc/sxcInstanceInterface\";\r\nimport { ElementRef } from \"@angular/core\";\r\nimport { ReplaySubject, Observable } from \"rxjs\";\r\nimport { sxcInstance } from \"tosic/sxc/sxcInstance\";\r\n\r\ndeclare const window: any;\r\n\r\nexport class SxcNg {\r\n    private globSxc: any;\r\n    public ready : boolean = false;\r\n\r\n    // often important dnn properties\r\n    private midSubject: ReplaySubject<number> = new ReplaySubject<number>();\r\n    moduleId: Observable<number>;\r\n    private tidSubject: ReplaySubject<number> = new ReplaySubject<number>();\r\n    tabId: Observable<number>;\r\n    private contentBlockIdSubject: ReplaySubject<number> = new ReplaySubject<number>();\r\n    contentBlockId: Observable<number>;\r\n    private sfSubject: ReplaySubject<any> = new ReplaySubject<any>();\r\n    servicesFramework: Observable<any>;\r\n\r\n    private sxcSubject: ReplaySubject<sxcInstanceInterface> = new ReplaySubject<sxcInstanceInterface>();\r\n    sxc: Observable<sxcInstanceInterface>;\r\n\r\n    constructor() {\r\n        this.globSxc = <any> window.$2sxc;\r\n        if(this.globSxc == undefined)\r\n            console.log('window.$2sxc is null - you probably forgot to include the script before loading angular');\r\n\r\n        this.moduleId = this.midSubject.asObservable();\r\n        this.tabId = this.tidSubject.asObservable();\r\n        this.contentBlockId = this.contentBlockIdSubject.asObservable();\r\n        this.servicesFramework = this.sfSubject.asObservable();\r\n        this.sxc = this.sxcSubject.asObservable();\r\n    };\r\n\r\n    autoConfigure(htmlNode:ElementRef) {\r\n        if(this.globSxc == undefined)\r\n            throw \"cannot autoConfigure - missing $2sxc\";\r\n\r\n        let sxc = <sxcInstanceInterface> this.globSxc(htmlNode.nativeElement);\r\n        console.log('sxc in bootstrap', sxc);\r\n        if(sxc == undefined || sxc == null)\r\n            throw \"couldn't get sxc instance - reason unknown\";\r\n\r\n        this.sxcSubject.next(sxc);\r\n\r\n        // update/publish moduleId\r\n        this.midSubject.next(sxc.id);\r\n        this.contentBlockIdSubject.next(sxc.cbid);\r\n\r\n        // todo: this may need a delay, as the SF may not be ready yet...\r\n        let sf = window.$.ServicesFramework(sxc.id);\r\n        this.sfSubject.next(sf);\r\n\r\n        this.tidSubject.next(sf.getTabId());\r\n\r\n        this.ready = true;\r\n    }\r\n\r\n\r\n    getInstance(seed: any, cbid?: number) : sxcInstanceInterface {\r\n        return <sxcInstanceInterface> this.globSxc(seed, cbid);\r\n    }\r\n\r\n    urlParams(name: string): string {\r\n        return <string> this.globSxc.urlParams(name);\r\n    }\r\n    \r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/tosic/sxc/$2sxc.ts"],"sourceRoot":""}